#!/bin/ksh -p
#
# {{{ CDDL HEADER
#
# This file and its contents are supplied under the terms of the
# Common Development and Distribution License ("CDDL"), version 1.0.
# You may only use this file in accordance with the terms of version
# 1.0 of the CDDL.
#
# A full copy of the text of the CDDL should have accompanied this
# source. A copy of the CDDL is also available via the Internet at
# http://www.illumos.org/license/CDDL.
# }}}
#
# Copyright 2011-2012 OmniTI Computer Consulting, Inc.  All rights reserved.
# Copyright 2021 OmniOS Community Edition (OmniOSce) Association.
#

# system-unconfigure: removes system-specific configuration, preparing the
#   newly-cloned zone for use.  It is similar to sys-unconfig, but designed
#   only for use with zone cloning.

SED=/usr/bin/sed

bomb() {
    echo ======================================================
    echo "$*"
    echo ======================================================
    exit 1
}

while getopts "R:" opt; do
    case $opt in
        R)
            ALTROOT=$OPTARG
            if [ -z "$ALTROOT" ]; then
                bomb "Missing argument to option -R"
                exit 254
            fi
        ;;
    esac
done

blank_root_pw() {
    echo "--- Setting root's password to blank"
    cat $ALTROOT/etc/shadow | \
        $SED -e 's%^root:[^:]*:%root:$5$kr1VgdIt$OUiUAyZCDogH/uaxH71rMeQxvpDEY2yX.x0ZQRnmeb9:%' > $ALTROOT/etc/shadow.blankroot
    mv $ALTROOT/etc/shadow.blankroot $ALTROOT/etc/shadow || \
        bomb "Failed to place modified $ALTROOT/etc/shadow"
}

clear_logs() {
    echo "--- Emptying log files"
    rm -f $ALTROOT/var/adm/messages.*
    rm -f $ALTROOT/var/log/syslog.*
    cat /dev/null > $ALTROOT/var/adm/messages
    cat /dev/null > $ALTROOT/var/log/syslog
}

setup_svccfg() {
    ROOTDIR=$ALTROOT
    SVCCFG_DTD=${ROOTDIR}/usr/share/lib/xml/dtd/service_bundle.dtd.1
    SVCCFG_REPOSITORY=${ROOTDIR}/etc/svc/repository.db
    SVCCFG=${ROOTDIR}/usr/sbin/svccfg
    [ -x $SVCCFG ] || SVCCFG=/usr/sbin/svccfg
    export ROOTDIR SVCCFG_DTD SVCCFG_REPOSITORY SVCCFG
}

disable_ldap() {
    echo "--- Disabling any LDAP configuration"
    rm -f $ALTROOT/var/ldap/ldap_client_cache
    rm -f $ALTROOT/var/ldap/ldap_client_cred
    rm -f $ALTROOT/var/ldap/ldap_client_file
    rm -f $ALTROOT/var/ldap/cachemgr.log
    $SVCCFG -s "network/ldap/client:default" setprop general/enabled=false
    return 0
}

reset_hosts() {
    if [ -f $ALTROOT/etc/inet/hosts ]; then
        echo "--- Resetting hosts file"
        cat > $ALTROOT/etc/inet/hosts.reset <<EOF
#
# Internet host table
#
::1		localhost
127.0.0.1	localhost loghost
EOF
        chmod 0644 $ALTROOT/etc/inet/hosts.reset
        mv $ALTROOT/etc/inet/hosts.reset $ALTROOT/etc/inet/hosts || \
            bomb "Failed to reset $ALTROOT/etc/inet/hosts"
    fi
}

reset_init_default() {
    echo "--- Resetting init defaults"
    $SED -e 's/^TZ.*/TZ=UTC/' -i $ALTROOT/etc/default/init || \
        bomb "Failed to reset TZ in $ALTROOT/etc/default/init"
}

reset_networking() {
    echo "--- Removing network configuration files"
    rm -f $ALTROOT/etc/hostname.*
    rm -f $ALTROOT/etc/defaultdomain
    rm -f $ALTROOT/etc/defaultrouter
    rm -f $ALTROOT/etc/nodename
    rm -f $ALTROOT/etc/resolv.conf
    rm -f $ALTROOT/etc/inet/netmasks
    rm -f $ALTROOT/etc/inet/static_routes
    for file in $ALTROOT/etc/ipadm/*.conf $ALTROOT/etc/dladm/*.conf ; do
        [ -f "$file" ] || continue
        cp /dev/null "$file" || bomb "Failed to blank $ALTROOT/$file"
    done
    $SVCCFG -s network/ip-interface-management:default \
        delprop ipmgmtd/first_boot_done
}

reset_nsswitch() {
    echo "--- Resetting nsswitch.conf"
    cp /etc/nsswitch.files $ALTROOT/etc/nsswitch.conf || \
        bomb "Failed to reset $ALTROOT/etc/nsswitch.conf"
}

reset_ssh_config() {
    [ -d $ALTROOT/etc/ssh ] || return
    echo "--- Resetting ssh configs"
    f=$ALTROOT/etc/ssh/sshd_config
    if [ -f $f ]; then
        echo "------ Resetting PermitRootLogin to no"
        $SED -i -e 's%^PermitRootLogin.*$%PermitRootLogin no%' $f \
            || bomb "Failed to update PermitRootLogin in $f"
    fi
    echo "------ Generating new ssh host keys"
    for algo in rsa dsa; do
        [ -f $ALTROOT/etc/ssh/ssh_host_${algo}_key ] \
            && mv $ALTROOT/etc/ssh/ssh_host_${algo}_key{,.old}
        [ -f $ALTROOT/etc/ssh/ssh_host_${algo}_key.pub ] \
            && mv $ALTROOT/etc/ssh/ssh_host_${algo}_key.pub{,.old}
    done
    /usr/bin/ssh-keygen -q -t rsa -b 2048 -N '' -C root@unknown \
        -f $ALTROOT/etc/ssh/ssh_host_rsa_key \
        || bomb "Failed to create new $ALTROOT/etc/ssh/ssh_host_rsa_key"
    /usr/bin/ssh-keygen -q -t dsa -N '' -C root@unknown \
        -f $ALTROOT/etc/ssh/ssh_host_dsa_key \
        || bomb "Failed to create new $ALTROOT/etc/ssh/ssh_host_dsa_key"
    rm -f $ALTROOT/etc/ssh/ssh_host_*.old \
        || bomb "Failed to remove old key files"
}

reset_vfstab() {
    echo "--- Resetting vfstab"
    cat > $ALTROOT/etc/vfstab.reset <<EOF
#device		device		mount		FS	fsck	mount	mount
#to mount	to fsck		point		type	pass	at boot	options
#
/devices	-		/devices	devfs	-	no	-
/proc		-		/proc		proc	-	no	-
ctfs		-		/system/contract ctfs	-	no	-
objfs		-		/system/object	objfs	-	no	-
sharefs		-		/etc/dfs/sharetab	sharefs	-	no	-
fd		-		/dev/fd		fd	-	no	-
swap		-		/tmp		tmpfs	-	yes	-
EOF
    chmod 0644 $ALTROOT/etc/vfstab.reset
    mv $ALTROOT/etc/vfstab.reset $ALTROOT/etc/vfstab || \
        bomb "Failed to reset $ALTROOT/etc/vfstab"
}

setup_svccfg
reset_hosts
reset_vfstab
reset_networking
reset_init_default
blank_root_pw
clear_logs
disable_ldap
reset_ssh_config

exit 0

# Vim hints
# vim:ts=4:sw=4:et:fdm=marker
